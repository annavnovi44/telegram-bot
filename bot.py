import os
import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "7747654844:AAFksU8Tlq03TpzJtUzvhI0ytPxB5kdsBrY"

# –°—Å—ã–ª–∫–∏ –Ω–∞ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –±–æ—Ç–æ–≤
DEMO_BOT_STORE = "https://t.me/ExpressStoreBot"
DEMO_BOT_ONLYFANS = "https://t.me/ContentSellerProBot"
CONTACT_ADMIN = "https://t.me/–¢–í–û–ô_–õ–û–ì–ò–ù"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ª–æ–≥–∏–Ω Telegram

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üõí –ë–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂", callback_data="store_bot")],
        [InlineKeyboardButton("üî• –ë–æ—Ç –¥–ª—è OnlyFans", callback_data="onlyfans_bot")],
        [InlineKeyboardButton("üì© –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", url=CONTACT_ADMIN)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ —Å Telegram-–±–æ—Ç–∞–º–∏.\n\n"
        "–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –±–æ—Ç —Ç–µ–±–µ –Ω—É–∂–µ–Ω:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –±–æ—Ç–∞
async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "store_bot":
        text = f"üõí –ë–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂:\n\n–≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –∑–∞–∫–∞–∑—ã –∏ –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä—è–º–æ –≤ Telegram.\n\n–î–µ–º–æ-–≤–µ—Ä—Å–∏—è: [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å]({DEMO_BOT_STORE})\n\n–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: [–ö–æ–Ω—Ç–∞–∫—Ç]({CONTACT_ADMIN})"
    elif query.data == "onlyfans_bot":
        text = f"üî• –ë–æ—Ç –¥–ª—è OnlyFans:\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –º–æ–¥–µ–ª—è–º –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n–î–µ–º–æ-–≤–µ—Ä—Å–∏—è: [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å]({DEMO_BOT_ONLYFANS})\n\n–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: [–ö–æ–Ω—Ç–∞–∫—Ç]({CONTACT_ADMIN})"
    
    keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(text=text, reply_markup=reply_markup, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
async def back_to_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await start(query, context)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_click))
    app.add_handler(CallbackQueryHandler(back_to_menu, pattern="back"))

    print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()

if __name__ == "__main__":
    main()
