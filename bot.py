import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackContext, filters

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7747654844:AAFksU8Tlq03TpzJtUzvhI0ytPxB5kdsBrY"

# ID –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞ (–≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –±—ã–ª –∞–¥–º–∏–Ω–æ–º!)
CHANNEL_ID = -1002401430345  

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("üõí –ë–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂", url="https://t.me/ExpressStoreBot?start")],
        [InlineKeyboardButton("üî• –ë–æ—Ç –¥–ª—è OnlyFans", url="https://t.me/contentSellerProBot?start")],
        [InlineKeyboardButton("üì© –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", url="https://t.me/ANNAYAV4")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–µ —Å Telegram-–±–æ—Ç–∞–º–∏. üöÄ\n\n"
        "üìå –î–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ—Ç–æ–≤:\n"
        "üîπ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂\n"
        "üîπ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –±–æ—Ç—ã –ø–æ–¥ —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å\n\n"
        "–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –±–æ—Ç —Ç–µ–±–µ –Ω—É–∂–µ–Ω:",
        reply_markup=reply_markup
    )

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª
async def forward_to_channel(update: Update, context: CallbackContext):
    if update.message.text:
        username = update.message.from_user.username
        message_text = update.message.text

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
        await context.bot.send_message(
            chat_id=CHANNEL_ID,
            text=f"üì¢ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username}:\n\n{message_text}"
        )

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    app.add_handler(CommandHandler("start", start))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ –∫–∞–Ω–∞–ª)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_to_channel))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (polling)
    print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()

if __name__ == "__main__":
    main()
